Notes:

DONE - Consider using radio buttons for artist answers too. Try renaming the name & class in the input type. Originally used checkboxes for the artist answers & radios for the guitar answers.

- Can figure out how to end game. Once the last questions is answered, the app needs to tell the user it's game over and provide an option to start over.

- Swap button colors (light blue to matching nav bar on hover)

- Try combining updateCounterGuitar() & updateCounterArtist() into one function? Having trouble trigger just the help modal when missing radio buttons by itself (the answer modal comes up overtop of it). - OR - write a test function to ensure that both questions have radio selections. The test function could test both conditions and, if both are selected, it would call the updateCounterGuitar() & updateCounterArtist() functions.
   **** Test function seems to be the way to go.

- Try modifying gameStatus() so that it works more like the testRadios() function.
	-> Currently throws this error "Uncaught TypeError: Cannot read property 'guitarChoices' of undefined", but works if you click a 2nd time.
	**** Got it working, but would be better if closing the modal called the test and stopped the game.





$("#next_question").on("click", "#nextButton", function () {
	if (currentQuestion < questions.length) {
	$("#next_question").css("display","none");
	$("#info").css("display","none");
	currentQuestion++;
	populateQuestionaire(currentQuestion);
// advance to the next question values in the array
	updateResultsCounter();
	$("#submit_answer").css("display","inline"); 
	} else {
		$("#next_question").css("display","none");
		$("#info").css("display","none");
		alert("Congratulations on finishing the quiz!");
	}

});